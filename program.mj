program P
	const int size = 4;

	struct Node
	{
		int val;
		Node next;
	}

	Node[] lists;
{

	Node insert(Node root, int val)
		Node n;
	{
		n = new Node;
		n.next = root;
		n.val = val;
		return n;
	}

	void print_list(Node root)
    {
        if (root == null) return;

        print(root.val);
        print(' ');

        print_list(root.next);
	}

	Node bubble_sort(Node start)
        int swapped, tmp;
        Node cur, sorted_end;
    {
        if (start == null) return null;

        cur = null;
        sorted_end = null;

        swapped = 1;
        while (swapped)
        {
            swapped = 0;
            cur = start;

            while (cur.next != sorted_end)
            {
                if (cur.val > cur.next.val)
                {
                    tmp = cur.val;
                    cur.val = cur.next.val;
                    cur.next.val = tmp;

                    swapped = 1;
                }
                cur = cur.next;
            }
            sorted_end = cur;
        }

        return start;
    }


	void main()
		int i, j;
		Node root;
	{
		lists = new Node[size];
		lists[2] = new Node;
		lists[2].val = 32;
		print(lists[2].val); print('\n');

        root = null;
        i = 0;
        while (i < 10) {
            root = insert(root, rand(100));
            i++;
        }

        lists[1] = root;

        print("Length:");
        print(len(lists));
        print('\n');

        print("Unsorted and Sorted: ");
        print('\n');

        print_list(lists[1]);
        print('\n');

        print_list(bubble_sort(lists[1]));
	}
}
